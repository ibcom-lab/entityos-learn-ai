import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ElasticLoadBalancingServiceException as __BaseException } from "./ElasticLoadBalancingServiceException";
export interface AccessLog {
  Enabled: boolean | undefined;
  S3BucketName?: string | undefined;
  EmitInterval?: number | undefined;
  S3BucketPrefix?: string | undefined;
}
export declare class AccessPointNotFoundException extends __BaseException {
  readonly name: "AccessPointNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessPointNotFoundException, __BaseException>
  );
}
export interface AddAvailabilityZonesInput {
  LoadBalancerName: string | undefined;
  AvailabilityZones: string[] | undefined;
}
export interface AddAvailabilityZonesOutput {
  AvailabilityZones?: string[] | undefined;
}
export interface AdditionalAttribute {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value?: string | undefined;
}
export interface AddTagsInput {
  LoadBalancerNames: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AddTagsOutput {}
export declare class DuplicateTagKeysException extends __BaseException {
  readonly name: "DuplicateTagKeysException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DuplicateTagKeysException, __BaseException>
  );
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface AppCookieStickinessPolicy {
  PolicyName?: string | undefined;
  CookieName?: string | undefined;
}
export interface ApplySecurityGroupsToLoadBalancerInput {
  LoadBalancerName: string | undefined;
  SecurityGroups: string[] | undefined;
}
export interface ApplySecurityGroupsToLoadBalancerOutput {
  SecurityGroups?: string[] | undefined;
}
export declare class InvalidConfigurationRequestException extends __BaseException {
  readonly name: "InvalidConfigurationRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidConfigurationRequestException,
      __BaseException
    >
  );
}
export declare class InvalidSecurityGroupException extends __BaseException {
  readonly name: "InvalidSecurityGroupException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSecurityGroupException, __BaseException>
  );
}
export interface AttachLoadBalancerToSubnetsInput {
  LoadBalancerName: string | undefined;
  Subnets: string[] | undefined;
}
export interface AttachLoadBalancerToSubnetsOutput {
  Subnets?: string[] | undefined;
}
export declare class InvalidSubnetException extends __BaseException {
  readonly name: "InvalidSubnetException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSubnetException, __BaseException>
  );
}
export declare class SubnetNotFoundException extends __BaseException {
  readonly name: "SubnetNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<SubnetNotFoundException, __BaseException>
  );
}
export interface BackendServerDescription {
  InstancePort?: number | undefined;
  PolicyNames?: string[] | undefined;
}
export declare class CertificateNotFoundException extends __BaseException {
  readonly name: "CertificateNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<CertificateNotFoundException, __BaseException>
  );
}
export interface HealthCheck {
  Target: string | undefined;
  Interval: number | undefined;
  Timeout: number | undefined;
  UnhealthyThreshold: number | undefined;
  HealthyThreshold: number | undefined;
}
export interface ConfigureHealthCheckInput {
  LoadBalancerName: string | undefined;
  HealthCheck: HealthCheck | undefined;
}
export interface ConfigureHealthCheckOutput {
  HealthCheck?: HealthCheck | undefined;
}
export interface ConnectionDraining {
  Enabled: boolean | undefined;
  Timeout?: number | undefined;
}
export interface ConnectionSettings {
  IdleTimeout: number | undefined;
}
export interface Listener {
  Protocol: string | undefined;
  LoadBalancerPort: number | undefined;
  InstanceProtocol?: string | undefined;
  InstancePort: number | undefined;
  SSLCertificateId?: string | undefined;
}
export interface CreateAccessPointInput {
  LoadBalancerName: string | undefined;
  Listeners: Listener[] | undefined;
  AvailabilityZones?: string[] | undefined;
  Subnets?: string[] | undefined;
  SecurityGroups?: string[] | undefined;
  Scheme?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateAccessPointOutput {
  DNSName?: string | undefined;
}
export interface CreateAppCookieStickinessPolicyInput {
  LoadBalancerName: string | undefined;
  PolicyName: string | undefined;
  CookieName: string | undefined;
}
export interface CreateAppCookieStickinessPolicyOutput {}
export declare class DuplicatePolicyNameException extends __BaseException {
  readonly name: "DuplicatePolicyNameException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DuplicatePolicyNameException, __BaseException>
  );
}
export declare class TooManyPoliciesException extends __BaseException {
  readonly name: "TooManyPoliciesException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyPoliciesException, __BaseException>
  );
}
export interface CreateLBCookieStickinessPolicyInput {
  LoadBalancerName: string | undefined;
  PolicyName: string | undefined;
  CookieExpirationPeriod?: number | undefined;
}
export interface CreateLBCookieStickinessPolicyOutput {}
export declare class DuplicateAccessPointNameException extends __BaseException {
  readonly name: "DuplicateAccessPointNameException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      DuplicateAccessPointNameException,
      __BaseException
    >
  );
}
export declare class InvalidSchemeException extends __BaseException {
  readonly name: "InvalidSchemeException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSchemeException, __BaseException>
  );
}
export declare class OperationNotPermittedException extends __BaseException {
  readonly name: "OperationNotPermittedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<OperationNotPermittedException, __BaseException>
  );
}
export declare class TooManyAccessPointsException extends __BaseException {
  readonly name: "TooManyAccessPointsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyAccessPointsException, __BaseException>
  );
}
export declare class UnsupportedProtocolException extends __BaseException {
  readonly name: "UnsupportedProtocolException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<UnsupportedProtocolException, __BaseException>
  );
}
export interface CreateLoadBalancerListenerInput {
  LoadBalancerName: string | undefined;
  Listeners: Listener[] | undefined;
}
export interface CreateLoadBalancerListenerOutput {}
export declare class DuplicateListenerException extends __BaseException {
  readonly name: "DuplicateListenerException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DuplicateListenerException, __BaseException>
  );
}
export interface PolicyAttribute {
  AttributeName?: string | undefined;
  AttributeValue?: string | undefined;
}
export interface CreateLoadBalancerPolicyInput {
  LoadBalancerName: string | undefined;
  PolicyName: string | undefined;
  PolicyTypeName: string | undefined;
  PolicyAttributes?: PolicyAttribute[] | undefined;
}
export interface CreateLoadBalancerPolicyOutput {}
export declare class PolicyTypeNotFoundException extends __BaseException {
  readonly name: "PolicyTypeNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<PolicyTypeNotFoundException, __BaseException>
  );
}
export interface CrossZoneLoadBalancing {
  Enabled: boolean | undefined;
}
export interface DeleteAccessPointInput {
  LoadBalancerName: string | undefined;
}
export interface DeleteAccessPointOutput {}
export interface DeleteLoadBalancerListenerInput {
  LoadBalancerName: string | undefined;
  LoadBalancerPorts: number[] | undefined;
}
export interface DeleteLoadBalancerListenerOutput {}
export interface DeleteLoadBalancerPolicyInput {
  LoadBalancerName: string | undefined;
  PolicyName: string | undefined;
}
export interface DeleteLoadBalancerPolicyOutput {}
export declare class DependencyThrottleException extends __BaseException {
  readonly name: "DependencyThrottleException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DependencyThrottleException, __BaseException>
  );
}
export interface Instance {
  InstanceId?: string | undefined;
}
export interface DeregisterEndPointsInput {
  LoadBalancerName: string | undefined;
  Instances: Instance[] | undefined;
}
export interface DeregisterEndPointsOutput {
  Instances?: Instance[] | undefined;
}
export declare class InvalidEndPointException extends __BaseException {
  readonly name: "InvalidEndPointException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidEndPointException, __BaseException>
  );
}
export interface DescribeAccessPointsInput {
  LoadBalancerNames?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface ListenerDescription {
  Listener?: Listener | undefined;
  PolicyNames?: string[] | undefined;
}
export interface LBCookieStickinessPolicy {
  PolicyName?: string | undefined;
  CookieExpirationPeriod?: number | undefined;
}
export interface Policies {
  AppCookieStickinessPolicies?: AppCookieStickinessPolicy[] | undefined;
  LBCookieStickinessPolicies?: LBCookieStickinessPolicy[] | undefined;
  OtherPolicies?: string[] | undefined;
}
export interface SourceSecurityGroup {
  OwnerAlias?: string | undefined;
  GroupName?: string | undefined;
}
export interface LoadBalancerDescription {
  LoadBalancerName?: string | undefined;
  DNSName?: string | undefined;
  CanonicalHostedZoneName?: string | undefined;
  CanonicalHostedZoneNameID?: string | undefined;
  ListenerDescriptions?: ListenerDescription[] | undefined;
  Policies?: Policies | undefined;
  BackendServerDescriptions?: BackendServerDescription[] | undefined;
  AvailabilityZones?: string[] | undefined;
  Subnets?: string[] | undefined;
  VPCId?: string | undefined;
  Instances?: Instance[] | undefined;
  HealthCheck?: HealthCheck | undefined;
  SourceSecurityGroup?: SourceSecurityGroup | undefined;
  SecurityGroups?: string[] | undefined;
  CreatedTime?: Date | undefined;
  Scheme?: string | undefined;
}
export interface DescribeAccessPointsOutput {
  LoadBalancerDescriptions?: LoadBalancerDescription[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeAccountLimitsInput {
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface Limit {
  Name?: string | undefined;
  Max?: string | undefined;
}
export interface DescribeAccountLimitsOutput {
  Limits?: Limit[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeEndPointStateInput {
  LoadBalancerName: string | undefined;
  Instances?: Instance[] | undefined;
}
export interface InstanceState {
  InstanceId?: string | undefined;
  State?: string | undefined;
  ReasonCode?: string | undefined;
  Description?: string | undefined;
}
export interface DescribeEndPointStateOutput {
  InstanceStates?: InstanceState[] | undefined;
}
export interface DescribeLoadBalancerAttributesInput {
  LoadBalancerName: string | undefined;
}
export interface LoadBalancerAttributes {
  CrossZoneLoadBalancing?: CrossZoneLoadBalancing | undefined;
  AccessLog?: AccessLog | undefined;
  ConnectionDraining?: ConnectionDraining | undefined;
  ConnectionSettings?: ConnectionSettings | undefined;
  AdditionalAttributes?: AdditionalAttribute[] | undefined;
}
export interface DescribeLoadBalancerAttributesOutput {
  LoadBalancerAttributes?: LoadBalancerAttributes | undefined;
}
export declare class LoadBalancerAttributeNotFoundException extends __BaseException {
  readonly name: "LoadBalancerAttributeNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      LoadBalancerAttributeNotFoundException,
      __BaseException
    >
  );
}
export interface DescribeLoadBalancerPoliciesInput {
  LoadBalancerName?: string | undefined;
  PolicyNames?: string[] | undefined;
}
export interface PolicyAttributeDescription {
  AttributeName?: string | undefined;
  AttributeValue?: string | undefined;
}
export interface PolicyDescription {
  PolicyName?: string | undefined;
  PolicyTypeName?: string | undefined;
  PolicyAttributeDescriptions?: PolicyAttributeDescription[] | undefined;
}
export interface DescribeLoadBalancerPoliciesOutput {
  PolicyDescriptions?: PolicyDescription[] | undefined;
}
export declare class PolicyNotFoundException extends __BaseException {
  readonly name: "PolicyNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<PolicyNotFoundException, __BaseException>
  );
}
export interface DescribeLoadBalancerPolicyTypesInput {
  PolicyTypeNames?: string[] | undefined;
}
export interface PolicyAttributeTypeDescription {
  AttributeName?: string | undefined;
  AttributeType?: string | undefined;
  Description?: string | undefined;
  DefaultValue?: string | undefined;
  Cardinality?: string | undefined;
}
export interface PolicyTypeDescription {
  PolicyTypeName?: string | undefined;
  Description?: string | undefined;
  PolicyAttributeTypeDescriptions?:
    | PolicyAttributeTypeDescription[]
    | undefined;
}
export interface DescribeLoadBalancerPolicyTypesOutput {
  PolicyTypeDescriptions?: PolicyTypeDescription[] | undefined;
}
export interface DescribeTagsInput {
  LoadBalancerNames: string[] | undefined;
}
export interface TagDescription {
  LoadBalancerName?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface DescribeTagsOutput {
  TagDescriptions?: TagDescription[] | undefined;
}
export interface DetachLoadBalancerFromSubnetsInput {
  LoadBalancerName: string | undefined;
  Subnets: string[] | undefined;
}
export interface DetachLoadBalancerFromSubnetsOutput {
  Subnets?: string[] | undefined;
}
export interface RemoveAvailabilityZonesInput {
  LoadBalancerName: string | undefined;
  AvailabilityZones: string[] | undefined;
}
export interface RemoveAvailabilityZonesOutput {
  AvailabilityZones?: string[] | undefined;
}
export interface ModifyLoadBalancerAttributesInput {
  LoadBalancerName: string | undefined;
  LoadBalancerAttributes: LoadBalancerAttributes | undefined;
}
export interface ModifyLoadBalancerAttributesOutput {
  LoadBalancerName?: string | undefined;
  LoadBalancerAttributes?: LoadBalancerAttributes | undefined;
}
export interface RegisterEndPointsInput {
  LoadBalancerName: string | undefined;
  Instances: Instance[] | undefined;
}
export interface RegisterEndPointsOutput {
  Instances?: Instance[] | undefined;
}
export interface TagKeyOnly {
  Key?: string | undefined;
}
export interface RemoveTagsInput {
  LoadBalancerNames: string[] | undefined;
  Tags: TagKeyOnly[] | undefined;
}
export interface RemoveTagsOutput {}
export declare class ListenerNotFoundException extends __BaseException {
  readonly name: "ListenerNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ListenerNotFoundException, __BaseException>
  );
}
export interface SetLoadBalancerListenerSSLCertificateInput {
  LoadBalancerName: string | undefined;
  LoadBalancerPort: number | undefined;
  SSLCertificateId: string | undefined;
}
export interface SetLoadBalancerListenerSSLCertificateOutput {}
export interface SetLoadBalancerPoliciesForBackendServerInput {
  LoadBalancerName: string | undefined;
  InstancePort: number | undefined;
  PolicyNames: string[] | undefined;
}
export interface SetLoadBalancerPoliciesForBackendServerOutput {}
export interface SetLoadBalancerPoliciesOfListenerInput {
  LoadBalancerName: string | undefined;
  LoadBalancerPort: number | undefined;
  PolicyNames: string[] | undefined;
}
export interface SetLoadBalancerPoliciesOfListenerOutput {}
